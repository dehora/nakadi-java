apply plugin: 'com.github.johnrengelman.shadow'

dependencies {
  implementation project.libs.guava
  implementation project.libs.gson
  implementation project.libs.okhttp3
  implementation project.libs.okhttp3log
  implementation project.libs.rxjava2
  implementation project.libs.slf4j

  testImplementation project.libs.junit
  testImplementation project.libs.logback_core
  testImplementation project.libs.logback_classic
  testImplementation project.libs.mockito_core
  testImplementation project.libs.okhttp3mockwebserver
}

sourceSets {
  test {
    java {
      srcDir 'src/test/resources'
    }
  }
}

/*
* Don't publish spike classes for source or java doc
*/
javadoc {
  exclude "**/spike/**"
}

sourceJar {
  exclude "**/spike/**"
}

/*
* Shade our dependencies; rx, gson, guava and okhttp3 have no transitive
* dependencies to cascade into
*/

import com.github.jengelman.gradle.plugins.shadow.tasks.ConfigureShadowRelocation

task relocateShadowJar(type: ConfigureShadowRelocation) {
  target = tasks.shadowJar
  prefix = "nakadi.shadow"
}

tasks.shadowJar.dependsOn tasks.relocateShadowJar

shadowJar {
  classifier = '' // remove the default all suffix to name it like a regular lib jar
  exclude 'net/dehora/nakadi/client/spike/**'
  exclude 'org/slf4j/**'
  exclude 'META-INF/maven/com.google.code.gson/**'
  exclude 'META-INF/maven/com.google.guava/**'
  exclude 'META-INF/maven/com.squareup.okhttp3/**'
  exclude 'META-INF/maven/com.squareup.okio/**'
  exclude 'META-INF/maven/org.slf4j/**'
  exclude 'rxjava.properties'
}

publishing {
  publications {
    shadow(MavenPublication) { publication ->
      project.shadow.component(publication)

      artifact(sourceJar) {
      }

      artifact(javadocJar) {
      }

      pom {

        url = 'https://github.com/dehora/nakadi-java'

        description = 'Client driver for Nakadi'

        licenses {
          license {
            name = 'MIT License'
          }
        }

        scm {
          url = 'git@github.com:dehora/nakadi-java.git'
        }
      }
    }
  }
}

signing {
  sign publishing.publications.shadow
}
